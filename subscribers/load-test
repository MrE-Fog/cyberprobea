#!/usr/bin/env python3

from cyberprobe.fsm import Fsm, FsmState, FsmCollection
import cyberprobe.indicators as ind
import json

evs = []
with open("test-data.js") as f:
    for line in f:
        try:
            a = json.loads(line)
            evs.append(a)
        except:
            pass

with open("indicators.json") as f:
    data = f.read()

obj = json.loads(data)

i = ind.load(obj)
fsc = FsmCollection.load_from(i)

def add_indicator(obj, ind):
    if "indicators" not in obj:
        obj["indicators"] = []
    obj["indicators"].append(ind)

def check_addresses(obj):

    for v in obj["src"]:
        if v.startswith("ipv4:"):
            fsc.update(('ipv4', v[5:]))
        if v.startswith("ipv6:"):
            fsc.update(('ipv6', v[5:]))
        if v.startswith("tcp:"):
            fsc.update(('tcp', v[4:]))
        if v.startswith("udp:"):
            fsc.update(('udp', v[4:]))

    for v in obj["dest"]:
        if v.startswith("ipv4:"):
            fsc.update(('ipv4', v[5:]))
        if v.startswith("ipv6:"):
            fsc.update(('ipv6', v[5:]))
        if v.startswith("tcp:"):
            fsc.update(('tcp', v[4:]))
        if v.startswith("udp:"):
            fsc.update(('udp', v[4:]))

def check_dns(obj):

    hosts = set()

    if "dns_message" in obj and "query" in obj["dns_message"]:
        for v in obj["dns_message"]["query"]:
            if "name" in v:
                hosts.add(v["name"])

    if "dns_message" in obj and "answer" in obj["dns_message"]:
        for v in obj["dns_message"]["answer"]:
            if "name" in v:
                hosts.add(v["name"])

    for v in hosts:
        fsc.update(('hostname', v))

def check_url(obj):

    if "url" in obj:
        fsc.update(('url', obj["url"]))

def check_email(obj):

    emails = set()
    if "smtp_data" in obj and "from" in obj["smtp_data"]:
        emails.add(obj["smtp_data"]["from"])
    if "smtp_data" in obj and "to" in obj["smtp_data"]:
        for v in obj["smtp_data"]["to"]:
            emails.add(v)

    for v in emails:
        fsc.update(('email', v))

def check_hits(obj):
    inds = fsc.get_hits()
    for ind in inds:
        add_indicator(obj, ind.descriptor.dump())

def handle(obj):
    fsc.init_state()
    check_addresses(obj)
    check_dns(obj)
    check_url(obj)
    check_email(obj)
    fsc.update(('end', ''))
    check_hits(obj)
    return obj

count = 0
fin = 1000000

while count < fin:
    for e in evs:
        e = handle(e)

        count = count + 1
